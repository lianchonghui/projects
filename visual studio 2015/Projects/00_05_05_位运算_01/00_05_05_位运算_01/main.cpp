#include<stdio.h>
#include<stdlib.h>

void main() {

	//^异或运算符, 一般用于加密解密(两次与一个数异或得到原来的数),不用中间数实现两数交换

}


void main4() {

	//|位或运算符,一般案例:控制指定灯亮

}


void main3() {

	//&位与运算符,一般用于清零某些位,原理是有假则假

}

void main2() {
	//~取反运算符,所有位取反,而源码->反码的取反是符号位不变的取反
	int a = 1;
	int _a = -1;

	printf("a=%d,_a=%d\n", a, _a);

	a = ~a;//0000 0000 0000 0000 0000 0000 0000 0001 -> 1111 1111 1111 1111 1111 1111 1111 1110//-2
	_a = ~_a;//1111 1111 1111 1111 1111 1111 1111 1111 -> 0000 0000 0000 0000 0000 0000 0000 0000 0000 //0
	printf("~a=%d,~_a=%d\n", a, _a);

	char b = -128;//1000 0000
	printf("%x", &b);

	getchar();



}


void main1() {
	//<<和>>运算符,<<相当于二进制乘以2,>>相当于二进制除以2

	//正数的左移和右移运算都是尾部后头部填充0;
	//负数的左移运算时尾部填充0,右移运算时头部填充1;
	int a = 1;
	int b = 2;

	int _a = -1;
	int _b = -2;

	printf("a=%d,b=%d\n", a, b);
	printf("_a=%d,_b=%d\n", _a, _b);

	a <<= 1;//2
	b >>= 1;//1                                                                                     
	_a <<= 1;//1000 0000 0000 0000 0000 0000 0000 0001 -> 1111 1111 1111 1111 1111 1111 1111 1110 -> 1111 1111 1111 1111 1111 1111 1111 1111 //左移结果-2
	_b >>= 1;//1000 0000 0000 0000 0000 0000 0000 0010 -> 1111 1111 1111 1111 1111 1111 1111 1101 -> 1111 1111 1111 1111 1111 1111 1111 1110 //右移结果-1

	printf("%x", &_a);
	printf("a=%d,b=%d\n", a, b);
	printf("a=%d,b=%d\n", _a, _b);

	getchar();

}